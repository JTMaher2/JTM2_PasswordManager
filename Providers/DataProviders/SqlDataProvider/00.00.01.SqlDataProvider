/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}JTM2_PasswordManager_Passwords]') AND type in (N'U'))
DROP TABLE {databaseOwner}[{objectQualifier}JTM2_PasswordManager_Passwords]
GO

CREATE TABLE {databaseOwner}{objectQualifier}JTM2_PasswordManager_Passwords
    (
    PasswordId int NOT NULL IDENTITY (1, 1),
    PasswordSite nvarchar(MAX) NOT NULL,
    PasswordText varbinary(MAX) NOT NULL,
    PasswordPlainText nvarchar(MAX) NOT NULL,
    PasswordIV varbinary(MAX) NOT NULL,
    PasswordSalt varbinary(MAX) NOT NULL,
    PasswordUrl nvarchar(MAX) NOT NULL,
    PasswordNotes nvarchar(MAX) NOT NULL,
    AssignedUserId int NULL,
    ModuleId int NOT NULL,
    CreatedOnDate datetime NOT NULL,
    CreatedByUserId int NOT NULL,
    LastModifiedOnDate datetime NOT NULL,
    LastModifiedByUserId int NOT NULL
    )  ON [PRIMARY]
     TEXTIMAGE_ON [PRIMARY]
GO


ALTER TABLE {databaseOwner}{objectQualifier}JTM2_PasswordManager_Passwords ADD CONSTRAINT
    PK_{objectQualifier}JTM2_PasswordManager_Passwords PRIMARY KEY CLUSTERED 
    (
    PasswordId
    ) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO


/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/